{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport axios from 'axios';\nimport '/node_modules/bootstrap/dist/css/bootstrap.css';\nimport '/node_modules/bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.css';\nimport '/node_modules/jquery/dist/jquery.min.js';\nimport '/node_modules/bootstrap/dist/js/bootstrap.js';\nimport '/node_modules/bootstrap-switch/dist/js/bootstrap-switch.js';\nimport $ from \"jquery\";\nimport { type } from 'jquery';\nimport { data } from 'jquery';\nimport { error } from 'jquery';\nconst app = createApp(App);\napp.config.globalProperties.$request = (url, type, data) => {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: type,\n      url: url,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      params: data\n    }).then(result => {\n      resolve(result.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  });\n};\napp.use(store);\napp.use(router);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","store","axios","$","type","data","error","app","config","globalProperties","$request","url","Promise","resolve","reject","method","headers","params","then","result","catch","console","use","mount"],"sources":["D:/vue_test/MyWebPage/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport axios from 'axios';\r\n\r\n\r\nimport '/node_modules/bootstrap/dist/css/bootstrap.css'\r\nimport '/node_modules/bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.css'\r\nimport '/node_modules/jquery/dist/jquery.min.js'\r\nimport '/node_modules/bootstrap/dist/js/bootstrap.js'\r\nimport '/node_modules/bootstrap-switch/dist/js/bootstrap-switch.js'\r\nimport $ from \"jquery\"\r\nimport { type } from 'jquery'\r\nimport { data } from 'jquery'\r\nimport { error } from 'jquery'\r\n\r\nconst app = createApp(App)\r\napp.config.globalProperties.$request = (url,type,data)=>{\r\n    return new Promise((resolve, reject) => {\r\n        axios({\r\n            method:type,\r\n            url: url,\r\n            headers :{\r\n                \"Content-Type\" : \"application/json\"\r\n            },\r\n            params : data\r\n        }).then((result)=>{\r\n            resolve(result.data)\r\n        }).catch((error) =>{\r\n            console.error(error);\r\n        }) \r\n            \r\n    })\r\n}\r\n    \r\n\r\n\r\napp.use(store)\r\napp.use(router)\r\napp.mount('#app')\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,gDAAgD;AACvD,OAAO,yEAAyE;AAChF,OAAO,yCAAyC;AAChD,OAAO,8CAA8C;AACrD,OAAO,4DAA4D;AACnE,OAAOC,CAAC,MAAM,QAAQ;AACtB,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,KAAK,QAAQ,QAAQ;AAE9B,MAAMC,GAAG,GAAGT,SAAS,CAACC,GAAG,CAAC;AAC1BQ,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACC,QAAQ,GAAG,CAACC,GAAG,EAACP,IAAI,EAACC,IAAI,KAAG;EACpD,OAAO,IAAIO,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCZ,KAAK,CAAC;MACFa,MAAM,EAACX,IAAI;MACXO,GAAG,EAAEA,GAAG;MACRK,OAAO,EAAE;QACL,cAAc,EAAG;MACrB,CAAC;MACDC,MAAM,EAAGZ;IACb,CAAC,CAAC,CAACa,IAAI,CAAEC,MAAM,IAAG;MACdN,OAAO,CAACM,MAAM,CAACd,IAAI,CAAC;IACxB,CAAC,CAAC,CAACe,KAAK,CAAEd,KAAK,IAAI;MACfe,OAAO,CAACf,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EAEN,CAAC,CAAC;AACN,CAAC;AAIDC,GAAG,CAACe,GAAG,CAACrB,KAAK,CAAC;AACdM,GAAG,CAACe,GAAG,CAACtB,MAAM,CAAC;AACfO,GAAG,CAACgB,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}